

******************************************** auth ********************************************

----------------------------------
--- auth/login
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    userName: 'johnny',
    password: 'pass:123456789',
}
----------------------------------
>>>>> Get <<<<<
{
    sessionToken: 'TOKEN',
    refreshToken: 'TOKEN',
    expiresIn: 1200,
}
--------------------------------------------------------------------



----------------------------------
--- auth/refresh-token
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    refreshToken: 'TOKEN',
}
----------------------------------
>>>>> Get <<<<<
{
    sessionToken: 'TOKEN',
    refreshToken: 'TOKEN',
    expiresIn: 1200,
}
--------------------------------------------------------------------



----------------------------------
--- auth/organizations/create/user
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    organizationName: 'Google',
    userName: 'johnny',
    firstName: 'John',
    lastName: 'Doe',
    email: 'aaa@aaa.aaa',
    phoneNumber: '901234567',
    password: 'pass:123456789',
}
----------------------------------
>>>>> Get <<<<<
{
    id: 'UUID',
}
--------------------------------------------------------------------



----------------------------------
--- auth/organizations/create/user/resend/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 'UUID'
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- auth/organizations/otp/confirm
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    createTryId: 'UUID',
    password: 'pass:123456789',
    otpCode: '123456',
}
----------------------------------
>>>>> Get <<<<<
{
    sessionToken: 'TOKEN',
    refreshToken: 'TOKEN',
    expiresIn: 1200,
}
--------------------------------------------------------------------



----------------------------------
--- auth/forgot/password/send/otp
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    paramForSendingOtp: 'aaa@aaa.aaa' || '901234567',
}
----------------------------------
>>>>> Get <<<<<
{
    id: 'UUID',
}
--------------------------------------------------------------------



----------------------------------
--- auth/forgot/password/resend/otp/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 'UUID'
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- auth/forgot/password/confirm/otp
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    otpId: 'UUID',
    otpCode: '123456',
}
----------------------------------
>>>>> Get <<<<<
{
    uniqueKey: 'UUID',
}
--------------------------------------------------------------------



----------------------------------
--- auth/forgot/password/change/password
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    uniqueKey: 'UUID',
    password: 'pass:123456789',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** users ********************************************

----------------------------------
--- users/me
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
{}
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    userId: 0,
    userName: 'johnny',
    firstName: 'John',
    lastName: 'Doe',
    middleName: 'Alfredo',
    birthDate: '23-05-2016',
    photoUrl: '/folder/img/avatar.jpg',
    email: 'aaa@aaa.aaa',
    phoneNumber: '901234567',
    systemAdmin: true,
    language: {
        code: 'uz',
    },
    roles: [
        {
            id: 0,
            roleName: 'admin',
            permissions: [
                {
                    codeName: 'TASK_EDIT',
                },
            ],
        },
    ],
}
--------------------------------------------------------------------



----------------------------------
--- users/attachRole
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    userId: 0,
    roles: [
        { id: x },
    ],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- users/change/language
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    langCode: 'uz',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** resource ********************************************

----------------------------------
--- resource/update
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Body:
{
    id: 0,
    name: 'aaaaaaa',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- resource/delete/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- resource/upload/file
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
UploadedFile:
{
    file: File(),
}

Query?:
{
    minWidth: 100,
    minHeight: 100,
}
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    url: '/folder/img/avatar.jpg',

    mimeType: 'image/jpeg' || 'application/pdf',
    name: 'aaaaaaa',
    createdAt: '2022-09-22T18:05:31+05:00',
    now: '2024-09-22T18:05:31+05:00', // Updated at
}
--------------------------------------------------------------------



******************************************** organizations ********************************************

----------------------------------
--- organizations
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    name: 'aaaaaaa',
    email: 'aaa@aaa.aaa',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- organizations
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    allSearch: null,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            name: 'aaaaaaa',
            email: 'aaa@aaa.aaa',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- organizations/id
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    name: 'aaaaaaa',
    email: 'aaa@aaa.aaa',
}
--------------------------------------------------------------------



----------------------------------
--- organizations/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    name: 'aaaaaaa',
    email: 'aaa@aaa.aaa',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- organizations/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** permissions ********************************************

----------------------------------
--- permissions
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    name: 'task edit',
    codeName: 'TASK_EDIT',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- permissions
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    allSearch: null,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            name: 'task edit',
            codeName: 'TASK_EDIT',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- permissions/id
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    name: 'task edit',
    codeName: 'TASK_EDIT',
}
--------------------------------------------------------------------



----------------------------------
--- permissions/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    name: 'task edit',
    codeName: 'TASK_EDIT',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- permissions/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** roles ********************************************

----------------------------------
--- roles
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    roleName: 'admin',
    codeName: 'ADMIN',
    permissions: [
        { id: x },
    ],
    organizationId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- roles
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    allSearch: null,
    organizationId: null,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            roleName: 'admin',
            codeName: 'ADMIN',
            permissions: [],
            organizationName: 'Google',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- roles/id
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    roleName: 'admin',
    codeName: 'ADMIN',
    permissions: [
        { codeName: 'TASK_EDIT' },
    ],
}
--------------------------------------------------------------------



----------------------------------
--- roles/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    roleName: 'admin',
    codeName: 'ADMIN',
    permissions: [
        { id: x },
    ],
    organizationId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- roles/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** employees ********************************************

----------------------------------
--- employees
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    firstName: 'John',
    lastName: 'Doe',
    middleName: 'Alfredo',
    birthDate: '23-05-2016',
    resourceFile: {
        id: 0,
    },
    photoUrl: '/folder/img/avatar.jpg', // for frontend, appears in GET
    user: {
        organizationId: 0,
        userName: 'johnny',
        password: 'pass:123456789',
        email: 'aaa@aaa.aaa',
        phoneNumber: '901234567',
    }
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- employees
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    withPhoto: true,
    allSearch: null,
    organizationId: 0,
    isManager: true,
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            userName: 'johnny',
            firstName: 'John',
            lastName: 'Doe',
            middleName: 'Alfredo',
            email: 'aaa@aaa.aaa',
            photoUrl: '/folder/img/avatar.jpg',
            organizationName: 'Google',
            roles: [
                {
                    roleName: 'admin',
                    permissions: [
                        {
                            codeName: 'TASK_EDIT',
                        },
                    ],
                },
            ],
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- employees/id
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    userId: 0,
    userName: 'johnny',
    firstName: 'John',
    lastName: 'Doe',
    middleName: 'Alfredo',
    birthDate: '23-05-2016',
    email: 'aaa@aaa.aaa',
    phoneNumber: '901234567',
    photoUrl: '/folder/img/avatar.jpg',
    organizationId: 0,
    systemAdmin: true,
    roles: [
        {
            id: 0,
            roleName: 'admin',
            permissions: [
                {
                    codeName: 'TASK_EDIT',
                },
            ],
        },
    ],
}
--------------------------------------------------------------------



----------------------------------
--- employees/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    firstName: 'John',
    lastName: 'Doe',
    middleName: 'Alfredo',
    birthDate: '23-05-2016',
    resourceFile: {
        id: 0,
    },
    photoUrl: '/folder/img/avatar.jpg', // for frontend, appears in GET
    user: {
        organizationId: 0,
        id: 0,
        userName: 'johnny',
        email: 'aaa@aaa.aaa',
        phoneNumber: '901234567',
    }
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- employees/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- employees/password/change/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    newPassword: 'pass:123456789',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- employees/profile/update/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    firstName: 'John',
    lastName: 'Doe',
    middleName: 'Alfredo',
    birthDate: '23-05-2016',
    resourceFile: {
        id: 0,
    },
    photoUrl: '/folder/img/avatar.jpg', // for frontend, appears in GET
    user: {
        id: 0,
        userName: 'johnny',
        email: 'aaa@aaa.aaa',
        phoneNumber: '901234567',
    }
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** groups ********************************************

----------------------------------
--- groups
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    name: 'aaaaaaa',
    organizationId: 0,
    leaderId: 0, // most probably for frontend
    userIds: [
        {
            id: 0,
            firstName: 'John',
            lastName: 'Doe',
            middleName: 'Alfredo',
        },
        {
            id: 0,
            firstName: 'John',
            lastName: 'Doe',
            middleName: 'Alfredo',
            leader: true,
        },
    ],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- groups
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    allSearch: null,
    organizationId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            name: 'aaaaaaa',
            organizationName: 'Google',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- groups/id
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    name: 'aaaaaaa',
    organizationId: 0,
    employeeGroups: [
        {
            employeeId: 0,
            employeeInfo: {
                firstName: 'John',
                lastName: 'Doe',
                middleName: 'Alfredo',
            },
            leader: true,
        }
    ],
}
--------------------------------------------------------------------



----------------------------------
--- groups/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    name: 'aaaaaaa',
    organizationId: 0,
    leaderId: 0, // most probably for frontend
    userIds: [
        {
            id: 0,
            firstName: 'John',
            lastName: 'Doe',
            middleName: 'Alfredo',
        },
        {
            id: 0,
            firstName: 'John',
            lastName: 'Doe',
            middleName: 'Alfredo',
            leader: true,
        },
    ],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- groups/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** tasks ********************************************

----------------------------------
--- tasks
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    name: 'aaaaaaa',
    projectId: 0,
    columnId: 0,
    organizationId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- tasks
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    allSearch: null,
    ownTask: false,
    projectId: 0,
    columnId: 0,
    deadLine: '2016-05-23',
    hasNoDeadline: true,
    inNextDay: true,
    inNextWeek: true,
    inNextMonth: true,
    overdue: true,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            name: 'aaaaaaa',
            columnName: 'aaaaaaa',
            projectName: 'aaaaaaa',
            projectId: 0,
            deadLine: '2022-09-22T18:05:31+05:00',
            status: 'RED' || 'GREEN' || 'YELLOW' || 'BLUE',
            taskPriorityType: {
                value: 'HIGH_PRIORITY' || 'NORMAL_PRIORITY' || 'LOW_PRIORITY',
            },
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- tasks/id
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    name: 'aaaaaaa',
    description: 'aaaaaaa',
    startAt: '2022-09-22T18:05:31+05:00', // created
    startDate: '2022-09-22T18:05:31+05:00', // deadline start
    deadLine: '2022-09-22T18:05:31+05:00', // deadline end
    projectId: 0,
    projectName: 'aaaaaaa',
    columnName: 'aaaaaaa',
    status: 'RED' || 'GREEN' || 'YELLOW' || 'BLUE',
    taskLevelType: {
        id: 0,
        name: 'aaaaaaa',
        value: 'HIGH_LEVEL' || 'NORMAL_LEVEL' || 'LOW_LEVEL',
    },
    taskPriorityType: {
        id: 0,
        name: 'aaaaaaa',
        value: 'HIGH_PRIORITY' || 'NORMAL_PRIORITY' || 'LOW_PRIORITY',
    },
}
--------------------------------------------------------------------



----------------------------------
--- tasks/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    name: 'aaaaaaa',
    description: 'aaaaaaa',
    taskLevelType: {
        id: 0
    },
    taskPriorityType: {
        id: 0
    },
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- tasks/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- tasks/copy
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    id: 0,
    name: 'aaaaaaa',
    projectId: 0,
    columnId: 0,
    ordering: 0,
    withCheckLists: true,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- tasks/move
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    id: 0,
    projectId: 0,
    columnId: 0,
    ordering: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskTimer
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    id: 0, // task id
    entryTypeCode: 'START' || 'STOP',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskDeadline
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    startDate: '2022-09-22 18:05:31',
    deadLine: '2022-09-22 18:05:31',
    checked: true,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskDeadline
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    startDate: '2022-09-22 18:05:31',
    deadLine: '2022-09-22 18:05:31',
    checked: true,
    changesComment: 'aaaaaaa',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskDeadline
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    startDate: true, // delete this field
    deadLine: true, // delete this field
    changesComment: 'aaaaaaa',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskAttachments
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    attachments: [
        {
            id: 0, // returned id from 'resource/upload/file'
        }
    ],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskAttachments
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    taskId: 0,
}
----------------------------------
>>>>> Get <<<<<
[
    {
        id: 0,
        url: '/folder/img/avatar.jpg',
        mimeType: 'image/jpeg' || 'application/pdf',
        name: 'aaaaaaa',
        createdAt: '2022-09-22T18:05:31+05:00',
        now: '2024-09-22T18:05:31+05:00', // Updated at
    }
]
--------------------------------------------------------------------



----------------------------------
--- taskAttachments
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- tasks/id/details
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    name: 'aaaaaaa',
    description: 'aaaaaaa',
    startAt: '2022-09-22T18:05:31+05:00', // created
    startDate: '2022-09-22T18:05:31+05:00', // deadline start
    deadLine: '2022-09-22T18:05:31+05:00', // deadline end
    projectId: 0,
    projectName: 'aaaaaaa',
    columnName: 'aaaaaaa',
    status: 'RED' || 'GREEN' || 'YELLOW' || 'BLUE',
    taskLevelType: {
        id: 0,
        name: 'aaaaaaa',
        value: 'HIGH_LEVEL' || 'NORMAL_LEVEL' || 'LOW_LEVEL',
    },
    taskPriorityType: {
        id: 0,
        name: 'aaaaaaa',
        value: 'HIGH_PRIORITY' || 'NORMAL_PRIORITY' || 'LOW_PRIORITY',
    },
    checkListGroups: [
        {
            id: 0,
            name: 'aaaaaaa',
            percent: 100,
            checkList: [
                {
                    id: 0,
                    checkListGroupId: 0,
                    text: 'aaaaaaa',
                    checked: true,
                    members: [
                        {
                            employee: {
                                userName: 'johnny',
                                firstName: 'John',
                                lastName: 'Doe',
                            }
                        }
                    ],
                }
            ]
        }
    ],
    comments: [
        {
            id: 0,
            userId: 0,
            firstName: 'John',
            lastName: 'Doe',
            photoUrl: '/folder/img/avatar.jpg',
            createdAt: '2022-09-22T18:05:31+05:00',
            commentType: {
                id: 0,
                value: 'TASK_COMMENT_TYPE_INFORMATION'
                        || 'TASK_COMMENT_TYPE_PROBLEM'
                        || 'TASK_COMMENT_TYPE_DECISION',
            },
            commentText: 'aaaaaaa',
            members: [
                {
                    employee: {
                        userId: 0,
                        userName: 'johnny',
                        firstName: 'John',
                        lastName: 'Doe',
                    }
                }
            ],
        }
    ],
    commentsCount: 123,
    members: [
        {
            employee: {
                id: 0,
                userName: 'johnny',
                firstName: 'John',
                lastName: 'Doe',
                photoUrl: '/folder/img/avatar.jpg',
            }
        }
    ],
    actions: [
        {
            id: 0,
            taskId: 0,
            name: 'aaaaaaa',
            firstName: 'John',
            lastName: 'Doe',
            photoUrl: '/folder/img/avatar.jpg',
            createdAt: '2022-09-22T18:05:31+05:00',
            activityType: {
                id: 0,
                value: 'CREATE_PROJECT'
                        || 'DELETE_PROJECT'
                        || 'CHANGE_PROJECT'
                        || ...,
            },
            textParams: {
                oldProjectName: 'aaaaaaa',
                memberName: 'aaaaaaa',
                projectColumnName: 'aaaaaaa',
                newProjectColumnName: 'aaaaaaa',
                oldProjectColumnName: 'aaaaaaa',
                oldTaskName: 'aaaaaaa',
                checklistGroupName: 'aaaaaaa',
                newCheckListGroupName: 'aaaaaaa',
                oldCheckListGroupName: 'aaaaaaa',
                checkListText: 'aaaaaaa',
                oldCheckListText: 'aaaaaaa',
                commentText: 'aaaaaaa',
                newCommentText: 'aaaaaaa',
                oldCommentText: 'aaaaaaa',
                resourceFileName: 'aaaaaaa',
                attachmentName: 'aaaaaaa',
                deadLine: 'aaaaaaa',
            },
        },
    ],
    actionsCount: 123,
    attachments: [
        {
            id: 0,
            url: '/folder/img/avatar.jpg',
            mimeType: 'image/jpeg' || 'application/pdf',
            name: 'aaaaaaa',
            createdAt: '2022-09-22T18:05:31+05:00',
            now: '2024-09-22T18:05:31+05:00', // Updated at
        }
    ],
    tags: [
        {
            id: 0,
            projectTagId: 0, // not project id
            name: 'aaaaaaa',
            color: 'aaaaaaa',
        }
    ],
    timeEntryType: 'START' || 'STOP',
}
--------------------------------------------------------------------



******************************************** taskComments ********************************************

----------------------------------
--- taskComments
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    commentText: 'aaaaaaa',
    commentType: {
        id: 0,
        // TASK_COMMENT_TYPE_INFORMATION
        // TASK_COMMENT_TYPE_PROBLEM
        // TASK_COMMENT_TYPE_DECISION
    },
    members: [
        { id: x }
    ],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskComments
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    projectId: 0,
    taskId: 0,
    forMenu: true,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            firstName: 'John',
            lastName: 'Doe',
            photoUrl: '/folder/img/avatar.jpg',
            createdAt: '2022-09-22T18:05:31+05:00',
            taskId: 0,
            taskName: 'taskName',
            commentType: {
                id: 0,
                value: 'TASK_COMMENT_TYPE_INFORMATION'
                        || 'TASK_COMMENT_TYPE_PROBLEM'
                        || 'TASK_COMMENT_TYPE_DECISION',
            },
            commentText: 'aaaaaaa',
            userId: 0,
            members: [
                {
                    employee: {
                        firstName: 'John',
                        lastName: 'Doe',
                        userName: 'johnny',
                    }
                }
            ],
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- taskComments/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    commentText: 'aaaaaaa',
    commentType: {
        id: 0,
        // TASK_COMMENT_TYPE_INFORMATION
        // TASK_COMMENT_TYPE_PROBLEM
        // TASK_COMMENT_TYPE_DECISION
    },
    members: [
        { id: x }
    ],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskComments/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** taskCheckLists ********************************************

----------------------------------
--- taskCheckLists
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    text: 'aaaaaaa',
    checked: false,
    checkListGroupId: 0,
    members: [
        {id: x}
    ],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskCheckLists/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    text: 'aaaaaaa',
    checked: false,
    checkListGroupId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskCheckLists/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** taskTags ********************************************

----------------------------------
--- taskTags
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    projectTagId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskTags
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    taskId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            projectTagId: 0,
            name: 'aaaaaaa',
            color: 'aaaaaaa',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- taskTags
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    projectTagId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** taskMembers ********************************************

----------------------------------
--- taskMembers
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    employeeId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- taskMembers
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    taskId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            employee: {
                id: 0,
                userName: 'johnny',
                firstName: 'John',
                lastName: 'Doe',
                photoUrl: '/folder/img/avatar.jpg',
            }
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- taskMembers
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    employeeId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** task (other) ********************************************

----------------------------------
--- actions
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    projectId: 0,
    taskId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            taskId: 0,
            name: 'aaaaaaa',
            firstName: 'John',
            lastName: 'Doe',
            photoUrl: '/folder/img/avatar.jpg',
            createdAt: '2022-09-22T18:05:31+05:00',
            activityType: {
                id: 0,
                value: 'CREATE_PROJECT'
                        || 'DELETE_PROJECT'
                        || 'CHANGE_PROJECT'
                        || ...,
            },
            textParams: {
                oldProjectName: 'aaaaaaa',
                memberName: 'aaaaaaa',
                projectColumnName: 'aaaaaaa',
                newProjectColumnName: 'aaaaaaa',
                oldProjectColumnName: 'aaaaaaa',
                oldTaskName: 'aaaaaaa',
                checklistGroupName: 'aaaaaaa',
                newCheckListGroupName: 'aaaaaaa',
                oldCheckListGroupName: 'aaaaaaa',
                checkListText: 'aaaaaaa',
                oldCheckListText: 'aaaaaaa',
                commentText: 'aaaaaaa',
                newCommentText: 'aaaaaaa',
                oldCommentText: 'aaaaaaa',
                resourceFileName: 'aaaaaaa',
                attachmentName: 'aaaaaaa',
                deadLine: 'aaaaaaa',
            },
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- share/task/email
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    employeeIds: [1, 2, 3],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- share/task/telegram
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    taskId: 0,
    employeeIds: [1, 2, 3],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** checkListGroups ********************************************

----------------------------------
--- checkListGroups
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    name: 'aaaaaaa',
    taskId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- checkListGroups
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    taskId: 0,
    sortBy: 'id',
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            taskId: 0,
            name: 'aaaaaaa',
            percent: 100,
            checkList: [
                {
                    id: 0,
                    checkListGroupId: 0,
                    text: 'aaaaaaa',
                    checked: true,
                    members: [
                        {
                            employee: {
                                userName: 'johnny',
                                firstName: 'John',
                                lastName: 'Doe',
                            }
                        }
                    ],
                }
            ]
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- checkListGroups/id
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    taskId: 0,
    name: 'aaaaaaa',
    percent: 100,
    checkList: [
        {
            id: 0,
            checkListGroupId: 0,
            text: 'aaaaaaa',
            checked: true,
            members: [
                {
                    employee: {
                        userName: 'johnny',
                        firstName: 'John',
                        lastName: 'Doe',
                    }
                }
            ],
        }
    ]
},
--------------------------------------------------------------------



----------------------------------
--- checkListGroups/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** projects ********************************************

----------------------------------
--- projects
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    name: 'aaaaaaa',
    codeName: 'AAAAAAA',
    projectType: 'TRELLO' || 'KANBAN',
    group: {
        id: 0
    },
    manager: {
        id: 0
    },
    organizationId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projects
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
    allSearch: null,
    groupId: 0,
    managerId: 0,
    organizationId: 0,
    projectKanban: true,
    projectTrello: true,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            name: 'aaaaaaa',
            codeName: 'AAAAAAA',
            managerName: 'aaaaaaa',
            projectType: {
                value: 'TRELLO' || 'KANBAN',
            },
            percent: 100, // for KANBAN only
            organizationName: 'aaaaaaa',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- projects/id
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    name: 'aaaaaaa',
    codeName: 'AAAAAAA',
    projectType: {
        value: 'TRELLO' || 'KANBAN',
    },
    group: {
        id: 0,
        name: 'aaaaaaa',
    },
    manager: {
        id: 0,
        firstName: 'John',
        lastName: 'Doe',
        middleName: 'Alfredo',
    },
    members: [
        {
            employee: {
                id: 0,
                firstName: 'John',
                lastName: 'Doe',
                middleName: 'Alfredo',
                isTeamLeader: true,
            }
        }
    ],
    organizationId: 0,
}
--------------------------------------------------------------------



----------------------------------
--- projects/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    name: 'aaaaaaa',
    codeName: 'AAAAAAA',
    group: {
        id: 0
    },
    manager: {
        id: 0
    },
    organizationId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    name: 'aaaaaaa',
    codeName: 'AAAAAAA',
    group: {
        id: 0,
        name: 'aaaaaaa',
    },
    manager: {
        id: 0,
        firstName: 'John',
        lastName: 'Doe',
        middleName: 'Alfredo',
    },
    members: [
        {
            id: 0,
            isOnline: true,
            employee: {
                id: 0,
                userName: 'johnny',
                firstName: 'John',
                lastName: 'Doe',
                middleName: 'Alfredo',
                isTeamLeader: true,
                photoUrl: '/folder/img/avatar.jpg',
                lastSeenTime: '2022-09-22T18:05:31+05:00',
            }
        }
    ],
}
--------------------------------------------------------------------



----------------------------------
--- projects/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projects/id/details
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    name: 'aaaaaaa',
    codeName: 'AAAAAAA',
    columns: [
        {
            id: 0,
            tasks: [
                {
                    id: 0,
                }
            ],
        }
    ],
    projectType: {
        name: 'aaaaaaa',
        value: 'TRELLO' || 'KANBAN',
    },
    group: {
        id: 0,
        name: 'aaaaaaa',
    },
    manager: {
        id: 0,
        firstName: 'John',
        lastName: 'Doe',
        middleName: 'Alfredo',
    },
    members: [
        {
            id: 0,
            isOnline: true,
            employee: {
                id: 0,
                userName: 'johnny',
                firstName: 'John',
                lastName: 'Doe',
                middleName: 'Alfredo',
                isTeamLeader: true,
                photoUrl: '/folder/img/avatar.jpg',
                lastSeenTime: '2022-09-22T18:05:31+05:00',
            }
        }
    ],
    tags: [
        {
            id: 0,
            // projectTagId: 0, // not project id
            // name: 'aaaaaaa',
            color: 'aaaaaaa',
        }
    ],
    actions: [
        {
            id: 0,
            taskId: 0,
            name: 'aaaaaaa',
            firstName: 'John',
            lastName: 'Doe',
            photoUrl: '/folder/img/avatar.jpg',
            createdAt: '2022-09-22T18:05:31+05:00',
            activityType: {
                id: 0,
                value: 'CREATE_PROJECT'
                        || 'DELETE_PROJECT'
                        || 'CHANGE_PROJECT'
                        || ...,
            },
            textParams: {
                oldProjectName: 'aaaaaaa',
                memberName: 'aaaaaaa',
                projectColumnName: 'aaaaaaa',
                newProjectColumnName: 'aaaaaaa',
                oldProjectColumnName: 'aaaaaaa',
                oldTaskName: 'aaaaaaa',
                checklistGroupName: 'aaaaaaa',
                newCheckListGroupName: 'aaaaaaa',
                oldCheckListGroupName: 'aaaaaaa',
                checkListText: 'aaaaaaa',
                oldCheckListText: 'aaaaaaa',
                commentText: 'aaaaaaa',
                newCommentText: 'aaaaaaa',
                oldCommentText: 'aaaaaaa',
                resourceFileName: 'aaaaaaa',
                attachmentName: 'aaaaaaa',
                deadLine: 'aaaaaaa',
            },
        },
    ],
    taskStatusType: [
        {
            id: 0,
            value: 'RED' || 'GREEN' || 'YELLOW' || 'BLUE',
        }
    ],
    taskPriorityType: [
        {
            id: 0,
            value: 'HIGH_PRIORITY' || 'NORMAL_PRIORITY' || 'LOW_PRIORITY',
        }
    ],
    taskLevelType: [
        {
            id: 0,
            value: 'HIGH_LEVEL' || 'NORMAL_LEVEL' || 'LOW_LEVEL',
        }
    ],
    taskCommentTypes: [
        {
            id: 0,
            value: 'TASK_COMMENT_TYPE_INFORMATION'
                    || 'TASK_COMMENT_TYPE_PROBLEM'
                    || 'TASK_COMMENT_TYPE_DECISION',
        }
    ],
    organizationId: 0,
    background: '#0000FF' || '/folder/img/avatar.jpg',
}
--------------------------------------------------------------------



----------------------------------
--- projects/selection
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    organizationId: 0,
    projectKanban: true,
    projectTrello: true,
    memberId: [1, 2, 3], // employee ids
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            name: 'aaaaaaa',
            organizationName: 'aaaaaaa',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- projects/background
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    background: 'url', // returned url from 'resource/upload/file'
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** projectMembers ********************************************

----------------------------------
--- projectMembers
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    projectId: 0,
    userIds: [
        { id: 0 },
    ],
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projectMembers
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    sortBy: 'id',
    sortDirection: 'desc',
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            isOnline: true,
            employee: {
                id: 0,
                userName: 'johnny',
                firstName: 'John',
                lastName: 'Doe',
                middleName: 'Alfredo',
                isTeamLeader: true,
                photoUrl: '/folder/img/avatar.jpg',
                lastSeenTime: '2022-09-22T18:05:31+05:00',
            }
        }
    ],
    totalCount: 123, // maybe?
}
--------------------------------------------------------------------



----------------------------------
--- projectMembers/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** projectColumns ********************************************

----------------------------------
--- projectColumns
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    name: 'aaaaaaa',
    codeName: 'AAAAAAA',
    columnType: 'DEFAULT',
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projectColumns/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    name: 'aaaaaaa',
    codeName: 'AAAAAAA',
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projectColumns/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projectColumns/move
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    id: 0,
    projectId: 0,
    ordering: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projectColumns/selection
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    id: 0,
    name: 'aaaaaaa',
    codeName: 'AAAAAAA',
    projectName: 'aaaaaaa',
    projectType: {
        value: 'TRELLO' || 'KANBAN',
    },
}
--------------------------------------------------------------------



******************************************** projectTags ********************************************

----------------------------------
--- projectTags
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    name: 'aaaaaaa',
    color: '#7d97c7',
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projectTags
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    sortBy: 'id',
    sortDirection: 'desc',
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            name: 'aaaaaaa',
            color: '#7d97c7',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- projectTags/id
----------------------------------
>>>>> HTTP <<<<<
— PUT
----------------------------------
>>>>> Send <<<<<
Param:
id = 0

Body:
{
    name: 'aaaaaaa',
    color: '#7d97c7',
    projectId: 0, // maybe?
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



----------------------------------
--- projectTags/id
----------------------------------
>>>>> HTTP <<<<<
— DELETE
----------------------------------
>>>>> Send <<<<<
Param:
id = 0
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** notifications ********************************************

----------------------------------
--- notifications
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    sortBy: 'id',
    sortDirection: 'desc',
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            id: 0,
            firstName: 'John',
            lastName: 'Doe',
            seenAt: '2022-09-22T18:05:31+05:00',
            createdAt: '2022-09-22T18:05:31+05:00',
            name: 'aaaaaaa',
            activityType: {
                id: 0,
                value: 'CREATE_PROJECT'
                        || 'DELETE_PROJECT'
                        || 'CHANGE_PROJECT'
                        || ...,
            },
            textParams: {
                oldProjectName: 'aaaaaaa',
                memberName: 'aaaaaaa',
                projectColumnName: 'aaaaaaa',
                newProjectColumnName: 'aaaaaaa',
                oldProjectColumnName: 'aaaaaaa',
                oldTaskName: 'aaaaaaa',
                checklistGroupName: 'aaaaaaa',
                newCheckListGroupName: 'aaaaaaa',
                oldCheckListGroupName: 'aaaaaaa',
                checkListText: 'aaaaaaa',
                oldCheckListText: 'aaaaaaa',
                commentText: 'aaaaaaa',
                newCommentText: 'aaaaaaa',
                oldCommentText: 'aaaaaaa',
                resourceFileName: 'aaaaaaa',
                attachmentName: 'aaaaaaa',
                deadLine: 'aaaaaaa',
            },
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- notifications/seen
----------------------------------
>>>>> HTTP <<<<<
— POST
----------------------------------
>>>>> Send <<<<<
Body:
{
    allNotification: false,
    notificationId: 0, // no need when 'allNotification: true'
}
----------------------------------
>>>>> Get <<<<<
{}
--------------------------------------------------------------------



******************************************** reports ********************************************

----------------------------------
--- reports/by/project/kanban/managersAndMember
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    projectId: 0, // for members
    userId: 0, // manager or member ids
    page: 0,
    perPage: 20,
    byProjectManagers: true, // for managers
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            employeeName: 'aaaaaaa', // for members
            projectName: 'aaaaaaa',

            task_column_new: 100,
            task_column_doing: 100,
            task_column_done: 100,
            task_column_verify: 100,
            task_column_archive: 100,

            task_process: 100,
            task_completed: 100,

            deadline_red: 100,
            deadline_yellow: 100,
            deadline_green: 100,
            deadline_default: 100,

            high_priority: 100,
            normal_priority: 100,
            low_priority: 100,
            default_priority: 100,

            high_level: 100,
            normal_level: 100,
            low_level: 100,
            default_level: 100,

            task_comment_type_information: 100,
            task_comment_type_problem: 100,
            task_comment_type_decision: 100,
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- reports/by/project/trello/managersAndMember
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    projectId: 0, // for members
    userId: 0, // manager or member ids
    page: 0,
    perPage: 20,
    byProjectManagers: true, // for managers
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            employeeName: 'aaaaaaa', // for members
            projectName: 'aaaaaaa',

            task_process: 100,
            task_completed: 100,

            deadline_red: 100,
            deadline_yellow: 100,
            deadline_green: 100,
            deadline_default: 100,

            high_priority: 100,
            normal_priority: 100,
            low_priority: 100,
            default_priority: 100,

            high_level: 100,
            normal_level: 100,
            low_level: 100,
            default_level: 100,

            task_comment_type_information: 100,
            task_comment_type_problem: 100,
            task_comment_type_decision: 100,
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- reports/task/by/projectWithUser
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    projectId: 0,
    page: 0,
    perPage: 20,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            taskName: 'aaaaaaa',
            rezalution: 'aaaaaaa',
            users: [ // most probably userName list
                'aaaaaaa',
                'aaaaaaa',
            ],
            status: 'RED' || 'GREEN' || 'YELLOW' || 'BLUE',
            priorityType: 'HIGH_PRIORITY' || 'NORMAL_PRIORITY' || 'LOW_PRIORITY',
            levelType: 'HIGH_LEVEL' || 'NORMAL_LEVEL' || 'LOW_LEVEL',
            deadLine: '2022-09-22T18:05:31+05:00',
            timeLeft: 'aaaaaaa',
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- reports/by/projects/kanban
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    forAllProject: true,
    page: 0,
    perPage: 20,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            projectName: 'aaaaaaa',

            reportDtos: {
                NEW: 100,
                DOING: 100,
                VERIFY: 100,
                DONE: 100,
                ARCHIVE: 100,
            },
            countByProject: 100,
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



----------------------------------
--- reports/by/projects/trello
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    reportDtos: {
        count: 100,
        columnName: 'aaaaaaa',
        color: '#0000FF', // for frontend
    },
    total: 100,
},
--------------------------------------------------------------------



----------------------------------
--- reports/person/full/weekly
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    startDate: '2022-09-22T18:05:31+05:00',
    endDate: '2022-09-22T18:05:31+05:00',
    userId: 0,
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            start: '2018-11-20 14:00',
            end: '2018-11-20 18:00',
            title: 'Need to go shopping',
            content: '<i class="icon material-icons">shopping_cart</i>',
            class: 'leisure'
        },
    ],
    totalCount: 123, // may not exist
}
--------------------------------------------------------------------



----------------------------------
--- reports/hours/by/timeleft
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    fio: 'aaaaaaa',
    typeDateInterval: 'WEEKLY_INTERVAL' || 'MONTHLY_INTERVAL' || 'QUARTER_INTERVAL' || 'YEARLY_INTERVAL',
    year: 2015, // for MONTHLY_INTERVAL and YEARLY_INTERVAL
    month: 12, // for MONTHLY_INTERVAL
    quarterPart: [1, 2, 3, 4], // for QUARTER_INTERVAL
    startDate: '2022-09-22T18:05:31+05:00', // for WEEKLY_INTERVAL
    endDate: '2022-09-22T18:05:31+05:00', // for WEEKLY_INTERVAL
}
----------------------------------
>>>>> Get <<<<<
{
    data: [
        {
            fio: 'aaaaaaa',
            reports: [
                {
                    name: 'aaaaaaa',
                    count: 100, // time in minutes
                },
            ],
            totalTimeLeft: 100,
        },
    ],
    totalCount: 123,
}
--------------------------------------------------------------------



******************************************** file ********************************************

----------------------------------
--- file/report/full/upload
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    projectId: 0,
    userId: 0,
    uploadKanban: true,
    uploadTrello: true,
    byProjectManagers: true,
}
----------------------------------
>>>>> Get <<<<<
download // most probably stream or blob
--------------------------------------------------------------------



----------------------------------
--- file/report/personal/upload
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    projectId: 0,
}
----------------------------------
>>>>> Get <<<<<
download // most probably stream or blob
--------------------------------------------------------------------



----------------------------------
--- file/report/date/upload
----------------------------------
>>>>> HTTP <<<<<
— GET
----------------------------------
>>>>> Send <<<<<
Query?:
{
    page: 0,
    perPage: 20,
    fio: 'aaaaaaa',
    typeDateInterval: 'WEEKLY_INTERVAL' || 'MONTHLY_INTERVAL' || 'QUARTER_INTERVAL' || 'YEARLY_INTERVAL',
    year: 2015, // for MONTHLY_INTERVAL and YEARLY_INTERVAL
    month: 12, // for MONTHLY_INTERVAL
    quarterPart: [1, 2, 3, 4], // for QUARTER_INTERVAL
    startDate: '2022-09-22T18:05:31+05:00', // for WEEKLY_INTERVAL
    endDate: '2022-09-22T18:05:31+05:00', // for WEEKLY_INTERVAL
}
----------------------------------
>>>>> Get <<<<<
download // most probably stream or blob
--------------------------------------------------------------------

